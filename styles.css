/* ------------------ */
/* Custom Properties  */
/* ------------------ */
:root {
    --clr-background: 255 13 6;
    --clr-black: 248 15 11;
    --clr-dark: 248 10 15;
    --clr-mid: 251 9 53;
    --clr-light: 252 11 91;
    --clr-white: 0 0 100;
    
    --clr-accent: 127 100 82;
    --clr-red: 0 91 63;
    --clr-orange: 13 95 66;
    --clr-yellow: 42 91 68;

    /* font-sizes */
    --fs-600: 2rem;
    --fs-500: 1.5rem;
    --fs-400: 1.125rem;
    --fs-300: 1rem;

    /* font-family */
    --ff-mono: "JetBrains Mono", monospace;

    /* line height */
    --lh-large: 2.6875rem;
    --lh-mid: 1.9375rem;
    --lh-small: 1.4375rem;
}

/* ------------------ */
/* CSS Reset          */
/* ------------------ */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1, h2, h3, h4,
button, input, label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1, h2,
h3, h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-size: var(--fs-400);
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* ------------------ */
/* Utility Classes    */
/* ------------------ */

/* general */

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.main {
  margin: 1em auto;
  padding-inline: 0.25em;
  max-width: 33.75rem;
  text-align: center;
}

.container {
  background-color: hsl( var(--clr-dark) );
  margin: 1em auto;
  padding: 1em;
  max-width: 80rem;
  text-align: center;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap; /* added line */
    border: 0;
}

/* colors */

.bg-background { background-color: hsl( var(--clr-background) ); }
.bg-black { background-color: hsl( var(--clr-black) ); }
.bg-dark { background-color: hsl( var(--clr-dark) ); }
.bg-mid { background-color: hsl( var(--clr-mid) ); }
.bg-light { background-color: hsl( var(--clr-light) ); }
.bg-accent { background-color: hsl( var(--clr-accent) ); }
.bg-red { background-color: hsl( var(--clr-red) ); }
.bg-orange { background-color: hsl( var(--clr-orange) ); }
.bg-yellow { background-color: hsl( var(--clr-yellow) ); }

.text-dark { color: hsl( var(--clr-dark) ); }
.text-mid { color: hsl( var(--clr-mid) ); }
.text-light { color: hsl( var(--clr-light) ); }
.text-white { color: hsl( var(--clr-white) ); }
.text-accent { color: hsl( var(--clr-accent) ); }

/* typography */

.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }

.uppercase {
    text-transform: uppercase;
}

.hidden {
  display: none;
}

body {
  font-family: var(--ff-mono);
}

.title {
  text-align: center;
  margin-block: 4em 1.25em;
}

.password-output {
  justify-content: space-between;
  align-items: center;
  padding: 1em;
}

.password-output-text {
  font-size: var(--fs-500);
}

.password-output-img {
  width: 1.09375rem;
  height: 1.25rem;
}

.password-output-img:hover,
.password-output-img:focus {
  cursor: pointer;
}

.character-length {
  justify-content: space-between;
  align-items: center;
}

.char-length-num {
  font-size: 24px;
}

.slider {
  position: relative;
  width: 100%;
  height: .5rem;
  margin-block: 1em;
}

.slider-left {
  width: 8%;
  height: inherit;
  /* background: hsl(var(--clr-accent)); */
  position: relative;
}

.slider-dial {
  position: absolute;
  width: 1.75rem;
  height: 1.75rem;
  border-radius: 50%;
  top: -0.625rem;
  right: 0;
}

.slider-dial:hover {
  cursor: pointer;
  background-color: hsl( var(--clr-black));
  border: 1px solid hsl( var(--clr-accent) );
}

.strength {
  padding-inline: 1em;
  justify-content: space-between;
  align-items: center;
}

.strength-container {
  flex-direction: column;
  width: 100%;
  font-size: var(--fs-500);
  padding-block: .5em;
  text-transform: uppercase;
}

.strength-label {
  font-size: var(--fs-300);
}

.strength-result-graph {
  justify-content: center;
  align-items: end;
  gap: 0.05em;
}

.rectangle {
  border: 2px solid #FFFFFF;
  width: 0.625rem;
  height: 1.75rem;
  margin: .75em .15em .15em .15em;
  padding: 0;
}

.radio-buttons {
  text-align: left;
  margin-block: 1.5em;
}

.radio-buttons > * {
  margin-block: .5em;
  display: flex;

}

.radio-button > label {
  display: flex;
  gap: 1.25rem;
}

.left,
.right {
  margin-block: 0 .65em;
}

.right {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  gap: 10px;
}

.border-none {
  border-color: transparent;
}

.checkbox {
  display: flex;
  width: 1.25rem;
  height: 1.25rem;
  border: 2px solid #FFF;
}

.active {
  background-color: hsl( var(--clr-accent) );
  border-color: transparent;
}

input[type="radio"] {
  appearance: none;
  margin: 0;
}

.generate-btn {
  justify-content: center;
  padding: 1em;
  width: 100%;
  background-color: hsl( var(--clr-accent) );
  border: none;
  border-radius: 0;
}

.generate-btn:hover {
  cursor: pointer;
}